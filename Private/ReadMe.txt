# DirectX 12 Advanced Rendering Engine 🎮

> DirectX 12 기반의 고급 3D 렌더링 엔진 - 테셀레이션, 웨이브 시뮬레이션, 다중 렌더링 파이프라인 구현

## 🚀 주요 기능

- **테셀레이션 기반 지형 렌더링** - Hull/Domain 셰이더를 활용한 동적 메시 세분화
- **실시간 웨이브 시뮬레이션** - 동적 버텍스 버퍼 업데이트를 통한 파도 애니메이션
- **다중 렌더링 파이프라인** - Opaque, Transparent, Alpha Tested 객체 별도 처리
- **지오메트리 셰이더 기반 스프라이트** - 빌보드 트리 렌더링
- **PBR 머티리얼 시스템** - Albedo, Roughness, Fresnel 기반 물리 기반 렌더링

## 🛠️ 기술 스택

### Graphics API
- **DirectX 12** - 최신 저수준 그래픽스 API
- **Direct3D 12** - 하드웨어 가속 3D 렌더링
- **HLSL** - High Level Shading Language

### 렌더링 기법
- **Tessellation Shaders** - 동적 메시 세분화 (Hull/Domain Shader)
- **Geometry Shaders** - 프리미티브 생성 및 변환
- **Multiple Render Targets** - 다중 렌더 타겟 지원
- **Command Lists** - GPU 명령 큐 최적화

## ✨ 구현 하이라이트

### 테셀레이션 시스템
- **동적 LOD**: 거리 기반 테셀레이션 팩터 조절
- **Quad Patch**: 4개 컨트롤 포인트 기반 패치 렌더링
- **하드웨어 테셀레이션**: GPU 기반 효율적인 메시 세분화

### 웨이브 시뮬레이션
- **물리 기반**: 사인파 중첩을 통한 자연스러운 파도
- **동적 버텍스**: 매 프레임 버텍스 위치 및 노멀 업데이트
- **텍스처 애니메이션**: UV 좌표 이동을 통한 물 표면 효과

### 멀티패스 렌더링
- **렌더 레이어**: Opaque → AlphaTested → Transparent 순서
- **알파 블렌딩**: 투명도 기반 객체 정렬 및 블렌딩

## 🎮 조작법

- **마우스 좌클릭 드래그**: 카메라 회전 (Orbit)
- **마우스 우클릭 드래그**: 줌 인/아웃
- **키보드 1**: Wire Frame Mode
- **ESC**: 프로그램 종료

## 📈 성능 최적화

- **프레임 리소스**: 3중 버퍼링으로 CPU-GPU 동기화 최적화
- **상수 버퍼**: 매 프레임 더티 체크를 통한 불필요한 업데이트 방지
- **디스크립터 힙**: GPU 메모리 액세스 최적화
- **커맨드 리스트**: 렌더링 명령 배칭

## 🔧 시스템 요구사항

- **OS**: Windows 10/11
- **DirectX**: DirectX 12 지원 GPU
- **Visual Studio**: 2019 이상
- **Windows SDK**: 10.0.19041 이상

## 🌟 기술적 특징

### DirectX 12 고급 기능 활용
- **Root Signature**: 효율적인 리소스 바인딩
- **Pipeline State Objects**: 렌더링 상태 사전 컴파일
- **Command Allocators**: 메모리 풀 기반 명령 할당

### 셰이더 프로그래밍
- **테셀레이션 셰이더**: Hull/Domain 셰이더 파이프라인
- **지오메트리 셰이더**: 동적 빌보드 생성
- **픽셀 셰이더**: PBR 기반 라이팅 모델

---

## 📝 개발 노트

이 프로젝트는 현대적인 GPU 아키텍처를 활용한 고성능 렌더링 시스템 구현에 중점을 두었습니다. DirectX 12의 저수준 제어를 통해 최적화된 렌더링 파이프라인을 구축하였으며, 테셀레이션과 지오메트리 셰이더 등 고급 GPU 기능들을 실제 프로젝트에 적용하였습니다.

**핵심 학습 요소:**
- DirectX 12 저수준 프로그래밍
- 하드웨어 테셀레이션 파이프라인
- 다중 렌더 타겟 관리
- GPU 메모리 및 동기화 최적화